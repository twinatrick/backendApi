version: "3.9"

services:
  postgres:
    image: 'postgres:latest'
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: verYs3cret
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
#    networks:
#      - my_network

  redis:
    image: "redis:latest"
    container_name: redis_container
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass your_password
#    networks:
#      - my_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
#    networks:
#      - my_network

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    networks:
#      - my_network

  backend:
    build: .
    image: backendapi0212
    container_name: backend_api_all
    restart: always
    depends_on:
      - postgres
      - redis
      - kafka
      - zookeeper
    ports:
      - "8000:8000"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: verYs3cret
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: your_password


      KAFKA_BOOTSTRAP_SERVERS: localhost:9092
#    networks:
#      - my_network

volumes:
  postgres_data:

networks:
  my_network:
